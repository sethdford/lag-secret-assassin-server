<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.assassin</groupId>
    <artifactId>assassin-game-api</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Assassin Game</name>
    <description>Serverless Assassin Game using AWS Lambda, DynamoDB, and API Gateway</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <java.version>17</java.version>
        <!-- Dependency Versions -->
        <aws.lambda.java.core.version>1.2.3</aws.lambda.java.core.version>
        <aws.lambda.java.events.version>3.11.6</aws.lambda.java.events.version>
        <aws.sdk.version>2.26.13</aws.sdk.version> <!-- Unified SDK version -->
        <slf4j.version>2.0.7</slf4j.version>
        <log4j.version>2.20.0</log4j.version> <!-- Consider Logback or java.util.logging as alternatives -->
        <junit.version>5.9.2</junit.version>
        <mockito.version>5.10.0</mockito.version> <!-- Updated for JDK 23 compatibility -->
        <bytebuddy.version>1.14.13</bytebuddy.version> <!-- Added for JDK 23 compatibility -->
        <gson.version>2.10.1</gson.version> <!-- For JSON handling in example handler -->
        <stripe.version>29.1.0</stripe.version> <!-- Stripe Java SDK -->
        <!-- Plugin Versions -->
        <maven.shade.plugin.version>3.4.1</maven.shade.plugin.version>
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.3.1</maven.surefire.plugin.version>
        <auth0.jwt.version>4.4.0</auth0.jwt.version>
        <!-- Skip JaCoCo on JDK 23 (not yet compatible with class file version 67) -->
        <jacoco.skip>true</jacoco.skip>
    </properties>

    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>software.amazon.awssdk</groupId>
          <artifactId>bom</artifactId>
          <version>${aws.sdk.version}</version> <!-- Use property for version -->
          <type>pom</type>
          <scope>import</scope>
        </dependency>
      </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- AWS Lambda Core Library -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>${aws.lambda.java.core.version}</version>
        </dependency>

        <!-- AWS Lambda Events Library (for APIGatewayProxyRequestEvent etc.) -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-events</artifactId>
            <version>${aws.lambda.java.events.version}</version>
        </dependency>

        <!-- AWS SDK v2 for DynamoDB Enhanced Client -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb-enhanced</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>

        <!-- AWS SDK v2 Core DynamoDB Client -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- AWS SDK v2 HTTP Client (needed by DynamoDbClient) -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>url-connection-client</artifactId>
            <!-- Version managed by BOM -->
        </dependency>
        
        <!-- AWS SDK v2 Utilities -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>utils</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- AWS SDK v2 Cognito Identity Provider -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>cognitoidentityprovider</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- AWS SDK v2 API Gateway Management API (for WebSocket messaging) -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apigatewaymanagementapi</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- AWS SDK v2 Rekognition for image moderation -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>rekognition</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- AWS SDK v2 Comprehend for text moderation -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>comprehend</artifactId>
            <!-- Version managed by BOM -->
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- Use Log4j2 as the SLF4j implementation -->
         <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>

         <!-- JSON Handling (Example) -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Testing Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Explicit ByteBuddy dependency for JDK 23 compatibility -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${bytebuddy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>${bytebuddy.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers for Integration Testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.19.7</version> <!-- Use a recent version -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.19.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>localstack</artifactId>
            <version>1.19.7</version>
            <scope>test</scope>
        </dependency>

        <!-- Added for Data Migration Tool -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.46.0.0</version> <!-- Use a recent version -->
            <!-- Scope might be 'runtime' or default depending if migration code is compiled separately -->
        </dependency>

        <!-- Add Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.32</version> <!-- Use the latest version -->
            <scope>provided</scope>
        </dependency>
        
        <!-- Jackson for JSON handling -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>

        <!-- Auth0 JWT Library for JWT validation -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${auth0.jwt.version}</version>
        </dependency>
        
        <!-- Auth0 JWK Library for JWK handling -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>jwks-rsa</artifactId>
            <version>0.22.1</version>
        </dependency>

        <!-- Stripe Java SDK -->
        <dependency>
            <groupId>com.stripe</groupId>
            <artifactId>stripe-java</artifactId>
            <version>${stripe.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.assassin.migration.DataMigrator</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
             <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <argLine>
                        -Dnet.bytebuddy.experimental=true
                    </argLine>
                    <environmentVariables>
                        <TEMPLATE_BUCKET_NAME>sam-template-bucket</TEMPLATE_BUCKET_NAME>
                        <STACK_NAME>test-stack</STACK_NAME>
                        <ENFORCE_ENVIRONMENT_VARIABLES>false</ENFORCE_ENVIRONMENT_VARIABLES>
                        <TABLE_NAME>test_data</TABLE_NAME>
                        <PLAYER_TABLE_NAME>test_player</PLAYER_TABLE_NAME>
                        <GAME_TABLE_NAME>test_game</GAME_TABLE_NAME>
                        <ELIMINATION_TABLE_NAME>test_elimination</ELIMINATION_TABLE_NAME>
                        <GAME_ZONE_STATE_TABLE_NAME>test_game_zone_state</GAME_ZONE_STATE_TABLE_NAME>
                        <MAP_CONFIG_TABLE_NAME>test_map_config</MAP_CONFIG_TABLE_NAME>
                        <SAFE_ZONE_TABLE_NAME>test_safe_zone</SAFE_ZONE_TABLE_NAME>
                        <AWS_REGION>us-east-1</AWS_REGION> <!-- For use in unit tests -->
                    </environmentVariables>
                </configuration>
             </plugin>
             <!-- JaCoCo plugin for code coverage -->
             <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <configuration>
                    <!-- Skip JaCoCo instrumentation on JDK 23 -->
                    <skip>${jacoco.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
             </plugin>
        </plugins>
    </build>
</project> 