#!/bin/bash

# Claude-Flow - SPARC Development Orchestration Tool
# LAG Secret Assassin Platform

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MEMORY_DIR="$PROJECT_ROOT/memory"
TASKMASTER_DIR="$PROJECT_ROOT/.taskmaster"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Initialize memory system
init_memory() {
    echo -e "${BLUE}Initializing Claude-Flow memory system...${NC}"
    mkdir -p "$MEMORY_DIR/agents" "$MEMORY_DIR/sessions"
    mkdir -p "$PROJECT_ROOT/coordination/memory_bank"
    echo -e "${GREEN}✓ Memory system initialized${NC}"
}

# SPARC commands
sparc_modes() {
    echo -e "${BLUE}Available SPARC modes:${NC}"
    echo "  architect     - System design and architecture"
    echo "  code          - Clean code implementation"
    echo "  tdd           - Test-driven development"
    echo "  spec-pseudocode - Requirements and planning"
    echo "  integration   - System integration"
    echo "  debug         - Troubleshooting and fixes"
    echo "  security-review - Security analysis"
    echo "  refinement-optimization-mode - Performance optimization"
    echo "  docs-writer   - Documentation creation"
    echo "  devops        - Deployment and infrastructure"
}

sparc_run() {
    local mode="$1"
    local task="$2"
    
    echo -e "${YELLOW}Running SPARC mode: $mode${NC}"
    echo -e "${BLUE}Task: $task${NC}"
    
    # Create memory entry
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] SPARC $mode: $task" >> "$MEMORY_DIR/sparc-log.txt"
    
    echo -e "${GREEN}✓ SPARC $mode executed${NC}"
}

# Memory commands
memory_store() {
    local key="$1"
    local value="$2"
    echo "{\"key\": \"$key\", \"value\": \"$value\", \"timestamp\": \"$(date -Iseconds)\"}" >> "$MEMORY_DIR/memory-store.json"
    echo -e "${GREEN}✓ Stored: $key${NC}"
}

memory_query() {
    local key="$1"
    echo -e "${BLUE}Querying memory for: $key${NC}"
    grep "$key" "$MEMORY_DIR/memory-store.json" 2>/dev/null || echo "No results found"
}

# TaskMaster integration
taskmaster_status() {
    if [ -f "$TASKMASTER_DIR/tasks/tasks.json" ]; then
        echo -e "${BLUE}TaskMaster Status:${NC}"
        local total=$(jq '.tasks | length' "$TASKMASTER_DIR/tasks/tasks.json" 2>/dev/null || echo "0")
        echo "  Total tasks: $total"
    else
        echo -e "${YELLOW}TaskMaster not initialized${NC}"
    fi
}

# Main command dispatcher
case "$1" in
    "sparc")
        case "$2" in
            "modes") sparc_modes ;;
            "run") sparc_run "$3" "$4" ;;
            "info") echo "SPARC mode info for: $3" ;;
            *) echo "Usage: claude-flow sparc {modes|run|info}" ;;
        esac
        ;;
    "memory")
        case "$2" in
            "store") memory_store "$3" "$4" ;;
            "query") memory_query "$3" ;;
            "stats") echo "Memory stats: $(wc -l < "$MEMORY_DIR/memory-store.json" 2>/dev/null || echo 0) entries" ;;
            *) echo "Usage: claude-flow memory {store|query|stats}" ;;
        esac
        ;;
    "status")
        echo -e "${BLUE}Claude-Flow Status:${NC}"
        echo "  Project: LAG Secret Assassin"
        echo "  Memory: $([ -d "$MEMORY_DIR" ] && echo "Active" || echo "Inactive")"
        taskmaster_status
        ;;
    "init")
        init_memory
        ;;
    *)
        echo -e "${BLUE}Claude-Flow - SPARC Development Orchestration${NC}"
        echo ""
        echo "Commands:"
        echo "  sparc modes                 - List SPARC development modes"
        echo "  sparc run <mode> \"<task>\"   - Execute SPARC mode"
        echo "  memory store <key> <value>  - Store in memory"
        echo "  memory query <key>          - Query memory"
        echo "  status                      - Show system status"
        echo "  init                        - Initialize memory system"
        ;;
esac